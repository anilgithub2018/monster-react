{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/SearchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAMN,EAAMI,QAAQG,MAApB,WCJCC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJhBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAU,qBAAKZ,UAAU,SAAf,SACE,uBAAOa,KAAK,SAASF,YAAaA,EAClCG,SAAWF,QCyCZG,G,wDAxCb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAAAI,GACb,EAAKC,SAAU,CAAEC,YAAaF,EAAEG,OAAOC,SAnBvC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAU,CAAET,SAAWkB,S,oBAUhC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAC/CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACA,4CACA,cAAC,EAAD,CAAWW,YAAY,SAASC,aAAce,KAAKf,eACnD,cAAC,EAAD,CAAUJ,SAAUoB,W,GApCRI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae39ec35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h1> { props.monster.name  } </h1>\r\n            <p> { props.monster.email } </p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport { Card } from \"../card/card.component\";\r\n \r\nexport const CardList = props => {\r\n    return <div className='card-list'> \r\n    {\r\n        props.monsters.map( monster => (\r\n          <Card key={monster.id} monster={monster}></Card>\r\n        ))\r\n      }\r\n    </div>;\r\n}\r\n  ","import React from \"react\";\r\n\r\nimport './searchBox.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return  ( <div className='search'> \r\n                <input type=\"search\" placeholder={placeholder}\r\n                onChange= {handleChange} />\r\n                </div>   \r\n            ); \r\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/SearchBox/searchBox.component';\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '' \n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json();\n    })\n    .then(users => {\n      this.setState( { monsters : users });\n    }\n    );\n  }\n\n  //arrow function defines the context for this\n  handleChange = e => {\n    this.setState( { searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n      <h1> Monsters </h1>\n      <SearchBox placeholder='Search' handleChange={this.handleChange}/>\n      <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}